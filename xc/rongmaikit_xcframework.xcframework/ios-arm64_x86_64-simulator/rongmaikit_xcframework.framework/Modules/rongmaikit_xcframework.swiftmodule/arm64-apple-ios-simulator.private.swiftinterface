// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name rongmaikit_xcframework
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
import React
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import rongmaikit_xcframework
@_hasMissingDesignatedInitializers public class JsonReader {
  public static func readJson(fileName: Swift.String) -> Any?
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class IOSIntentModule : ObjectiveC.NSObject {
  @objc public static var instance: React.RCTEventEmitter!
  public static var apiEventSet: Swift.Set<Swift.String>
  public static var wsEventSet: Swift.Set<Swift.String>
  public static var sdkEventSet: Swift.Set<Swift.String>
  @objc public static func callback(res: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
public class RongmaiCS {
  public init()
  public func getView() -> UIKit.UIView
  public func initSdk(config: Any)
  public func initSdk(config: Any, callback: @escaping rongmaikit_xcframework.CallbackFunc)
  public func baseEmit(event: Swift.String, args: [Swift.String : Any]?) -> Swift.String
  public func emit(event: Swift.String, params: [Swift.String : Any], config: [Swift.String : Any], callback: @escaping rongmaikit_xcframework.CallbackFunc)
  public func emit(event: Swift.String, params: [Swift.String : Any], callback: @escaping rongmaikit_xcframework.CallbackFunc)
  public func emit(event: Swift.String, callback: @escaping rongmaikit_xcframework.CallbackFunc)
  public func emit(event: Swift.String, params: [Swift.String : Any], config: [Swift.String : Any])
  public func emit(event: Swift.String, params: [Swift.String : Any])
  public func emit(event: Swift.String)
  public func subscribe(event: Swift.String, params: [Swift.String : Any] = [:], callback: @escaping rongmaikit_xcframework.CallbackFunc) -> Swift.String
  public func unsubscribe(_ wsId: Swift.String)
  public func destroy()
  @objc deinit
}
public typealias CallbackFunc = (_ obj: Any?) -> Swift.Void
@_hasMissingDesignatedInitializers public class Callback {
  public var callback: rongmaikit_xcframework.CallbackFunc
  public var sdkId: Swift.String
  @objc deinit
}
